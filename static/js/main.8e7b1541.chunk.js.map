{"version":3,"sources":["components/card.component.jsx","components/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","searchBox","placeholder","changeHandler","type","onChange","App","inputChangeHandler","e","console","log","setState","search_value","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAaeA,MAVf,SAAcC,GACV,OACI,sBAAKC,UAAW,iBAAhB,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCHvB,SAASC,EAASR,GACrB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OAC3B,cAAC,EAAD,CACAA,QAAWA,GADEA,EAAQC,S,MCElBO,MARf,YAAkD,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,cAC7B,OACI,qBAAKZ,UAAW,SAAhB,SACI,uBAAOa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,OCmCtDG,E,kDAlCb,aAAgB,IAAD,8BACb,gBAaFC,mBAAqB,SAACC,GACpBC,QAAQC,IAAI,wBACZ,EAAKC,SAAS,CAACC,aAAcJ,EAAEK,OAAOC,SAdtC,EAAKC,MAAQ,CACXhB,SAAU,GACVa,aAAc,IAJH,E,qDAQf,WAAsB,IAAD,OACnBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACZ,SAAUqB,S,oBAS1C,WAAW,IAAD,EACyBC,KAAKN,MAA/BhB,EADC,EACDA,SAAUa,EADT,EACSA,aACXU,EAAmBvB,EAASwB,QAAO,SAAA9B,GAAO,OAAIA,EAAQG,KAAK4B,cAAcC,SAASb,MACxF,OACE,sBAAKrB,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWW,YAAe,kBAC1BC,cAAiBkB,KAAKd,qBACtB,cAACT,EAAD,CAAUC,SAAYuB,W,GA9BZI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8e7b1541.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nfunction card(props) {\r\n    return (\r\n        <div className= 'card-container'>\r\n            <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\" />\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default card;\r\n","import React from 'react'\r\nimport \"./card-list.styles.css\";\r\nimport Card from \"./card.component\";\r\n\r\n\r\nexport function CardList(props) {\r\n    return (\r\n        <div className='card-list'>\r\n            {props.monsters.map(monster => \r\n            <Card key = {monster.id}\r\n            monster = {monster}/>   \r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nfunction searchBox({placeholder, changeHandler}) {\r\n    return (\r\n        <div className= 'search'>\r\n            <input type='search' placeholder={placeholder} onChange={changeHandler}></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default searchBox;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport {CardList} from \"./components/card-list.component\";\nimport SearchBox from './components/search-box/search-box.component';\n\nclass App extends Component {\n  \n  constructor () {\n    super();\n    this.state = {\n      monsters: [],\n      search_value: \"\"\n    }\n  }\n  \n  componentDidMount () {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}));\n  }\n\n  inputChangeHandler = (e) => {\n    console.log(\"input change handler\");\n    this.setState({search_value: e.target.value});\n        \n  }\n\n  render () {\n    const {monsters, search_value} = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(search_value)); \n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder = {\"search monsters\"}\n        changeHandler = {this.inputChangeHandler}/>        \n        <CardList monsters = {filteredMonsters} /> \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}